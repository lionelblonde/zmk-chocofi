/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// LAYERS
#define DEF 0
#define BT 1
#define NAV 2
#define FUNC 3
#define NUM 4
#define SYM 5
#define CL 6

/ {

        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick_tap_ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// default layer
//
                        bindings = <
   &none &kp Q      &kp W      &kp E       &kp R       &kp T          &kp Y &kp U       &kp I       &kp O      &kp P         &none
   &none &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G          &kp H &hm LSHFT J &hm LCTRL K &hm LALT L &hm LGUI SEMI &none
   &none &kp Z      &kp X      &kp C       &kp V       &kp B          &kp N &kp M       &kp COMMA   &kp DOT    &kp SQT       &none
                          &lt BT TAB &lt NAV SPACE &lt FUNC ESC    &lt NUM RET &lt SYM BSPC &lt CL DEL
                        >;
                };

                bt_layer {
// -----------------------------------------------------------------------------------------
// bt layer
//
                        bindings = <
   &none &none    &none    &none     &none     &none              &none &none        &none        &none        &none        &none
   &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none              &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none
   &none &none    &none    &none     &none     &none              &none &none        &none        &none        &none        &none
                                      &none &none &none        &none &none &bt BT_CLR
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// nav layer
//
                        bindings = <
   &none &none    &none    &none     &none     &none              &none    &none     &none     &none     &none &none
   &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none              &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none &none
   &none &none    &none    &none     &none     &none              &kp HOME &kp PG_DN &kp PG_UP &kp END   &none &none
                                      &none &none &none        &none &none &none
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
// func layer
//
                        bindings = <
   &none &none    &none    &none     &none     &none              &kp F1 &kp F2 &none  &none  &none  &none
   &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none              &kp F4 &kp F3 &kp F7 &kp F8 &kp F9 &none
   &none &none    &none    &none     &none     &none              &kp F5 &kp F6 &none  &none  &none  &none
                                      &none &none &none        &kp F10 &kp F11 &kp F12
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// num layer
//
                        bindings = <
   &none &kp KP_N7 &kp KP_N5       &kp KP_N3    &kp KP_N1   &kp KP_N9              &none &none     &none     &none    &none    &none
   &none &kp KP_N6 &kp KP_N4       &kp KP_N2    &kp KP_N0   &kp KP_N8              &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &none
   &none &kp PRCNT &kp KP_MULTIPLY &kp KP_EQUAL &kp KP_PLUS &kp KP_DIVIDE          &none &none     &none     &none    &none    &none
                                           &kp KP_MINUS &kp SPACE &kp KP_DOT     &none &none &none
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// sym layer
//
                        bindings = <
   &none &kp AT    &kp LBKT &kp LPAR      &kp LBRC  &kp DOLLAR             &none &none     &none     &none    &none    &none
   &none &kp UNDER &kp RBKT &kp RPAR      &kp RBRC  &kp CARET              &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &none
   &none &kp PIPE  &kp HASH &kp AMPERSAND &kp GRAVE &kp BACKSLASH          &none &none     &none     &none    &none    &none
                              &kp EXCLAMATION &kp TILDE &kp QUESTION     &none &none &none
                        >;
                };

                cl_layer {
// -----------------------------------------------------------------------------------------
// cl layer
//
                        bindings = <
   &none &none        &none &none &none &none              &none &none &none &none &none &none
   &none &kp CAPSLOCK &none &none &none &none              &none &none &none &none &none &none
   &none &none        &none &none &none &none              &none &none &none &none &none &none
                                &none &none &none        &none &none &none
                        >;
                };

        };
};
